apiVersion: v1
kind: Service
metadata:
  annotations:
    enzo: "true"
  labels:
    app.kubernetes.io/name: adam-express-project
  name: adam-express-service
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app.kubernetes.io/name: adam-express-project
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    enzo: "true"
  labels:
    app.kubernetes.io/name: adam-express-project
  name: adam-express-deployment
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: adam-express-project
  template:
    metadata:
      annotations:
        enzo: "true"
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: adam-express-project
    spec:
      containers:
      - env:
        - name: INGRESS_HOST
        - name: PROTOCOLS
        - name: LOG_LEVEL
          value: debug
        image: quay.io/adam_slomoi/express-app:4d761087537bd68e1a32f28927c1d474e7825574
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 3000
            scheme: HTTP
        name: adam-express-app
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      serviceAccountName: build-bot
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    argocd.argoproj.io/sync-options: Validate=false
    enzo: "true"
    openshift.io/host.generated: "true"
  name: adam-express-route
spec:
  tls:
    termination: edge
  to:
    kind: Service
    name: adam-express-service
    weight: 100
  wildcardPolicy: None
